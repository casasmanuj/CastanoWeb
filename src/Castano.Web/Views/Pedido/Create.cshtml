@model Castano.Web.Models.Pedido

@{
    ViewBag.Title = "Pedido Cástano y Asociados";

    @Styles.Render("~/Content/bootstrap.datetime")
}
<!-- Navigation -->
<div class="row">
    <nav class="navbar navbar-expand-lg navbar-light fixed-top" id="mainNav">
        <div class="container">
            <a class="navbar-brand js-scroll-trigger" href="@Url.Action("Index", "Home")">
                <img alt="castano&asociados" src="~/img/logo.jpg" style="max-width: 250px" />
            </a>
        </div>
    </nav>
</div>

<div class="container">
    @using (Html.BeginForm("Create", "Pedido", FormMethod.Post))
    {
        <section>
            @if (!string.IsNullOrWhiteSpace(ViewBag.Success))
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <strong>Éxito!</strong> @ViewBag.Success.
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }
            @if (!string.IsNullOrWhiteSpace(ViewBag.Error))
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <strong>Error!</strong> @ViewBag.Error.
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            }

            <!-- EVENTO -->
            <div class="container">
                <label>EVENTO</label>
                <div class="form-group">
                    @Html.LabelFor(m => Model.Salon)
                    <div class="col-xs-10 col-lg-5">
                        <input type="text" id="Salon" name="Salon" class="form-control" data-bind="value: Salon" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => Model.Prueba)
                    <div class="col-xs-10 col-lg-5">
                        <div class="form-group">
                            <div class="input-group date" id="Prueba" data-target-input="nearest">
                                <input type="text" class="form-control datetimepicker-input" name="Prueba" data-target="#Prueba" data-bind="dateString: Prueba, datePattern: 'DD/MM/YYYY HH:mm'" />
                                <div class="input-group-append" data-target="#Prueba" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => Model.Inicio)
                    <div class="col-xs-10 col-lg-5">
                        <div class="form-group">
                            <div class="input-group date" id="Inicio" data-target-input="nearest">
                                <input type="text" class="form-control datetimepicker-input" name="Inicio" data-target="#Inicio" data-bind="dateString: Inicio" />
                                <div class="input-group-append" data-target="#Inicio" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => Model.Finalizacion)
                    <div class="col-xs-10 col-lg-5">
                        <div class="form-group">
                            <div class="input-group date" id="Finalizacion" data-target-input="nearest">
                                <input type="text" class="form-control datetimepicker-input" name="Finalizacion" data-target="#Finalizacion" data-bind="dateString: Finalizacion" />
                                <div class="input-group-append" data-target="#Finalizacion" data-toggle="datetimepicker">
                                    <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => Model.CantidadDias)
                    <div class="col-xs-10">
                        <label data-bind="text: CantidadDias"></label>
                    </div>
                </div>
            </div>

            <!-- EQUIPAMIENTO -->
            <div class="container">
                <label>EQUIPAMIENTO</label>

                <div class="form-group">

                </div>
            </div>

            <hr />

            <!--SUBMIT-->
            <div class="container">
                <div class="form-group">
                    <div class="col-xs-offset-2 col-xs-10">
                        <button type="submit" class="btn btn-primary">Enviar</button>
                    </div>
                </div>
            </div>

        </section>
    }
</div>

@Scripts.Render("~/bundles/bootstrap.datetime")
@Scripts.Render("~/bundles/knockout")

<script type="text/javascript">
    $(document).ready(function () {
        $('#Prueba').datetimepicker({
            stepping: 15,
            minDate: moment(new Date()).add(1, 'days'),
            sideBySide: true
        });
        $('#Inicio').datetimepicker({
            stepping: 15,
            sideBySide: true
        });
        $('#Finalizacion').datetimepicker({
            stepping: 15,
            sideBySide: true
        });

        $("#Prueba").on("change.datetimepicker", function (e) {
            $('#Inicio').datetimepicker('minDate', moment(e.date).add(1, 'hour'));
        });
        $("#Inicio").on("change.datetimepicker", function (e) {
            $('#Finalizacion').datetimepicker('minDate', moment(e.date).add(1, 'hour'));
        });

        //
        ko.validation.init({
            errorElementClass: 'has-error',
            errorMessageClass: 'help-block',
            decorateInputElement: true
        });

        function modelPedido() {
            this.Salon = ko.observable('');
            this.Prueba = ko.observable();
            this.Inicio = ko.observable();
            this.Finalizacion = ko.observable();

            this.CantidadDias = ko.pureComputed(function () {
                var momentFinalizacion = moment(this.Finalizacion());
                var momentInicio = moment(this.Inicio());
                var diferencia = momentFinalizacion.diff(momentInicio, 'days');
                return this.Salon() + " " + this.Finalizacion() + " " + this.Inicio();
            }, this);
        };

        ko.applyBindings(modelPedido);
    });
</script>